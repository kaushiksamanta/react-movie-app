{"version":3,"sources":["components/movies/MovieItem.module.css","components/layout/MainNavigation.module.css","components/ui/Card.module.css","components/movies/MovieList.module.css","components/layout/Layout.module.css","store/favorites-context.tsx","components/ui/Card.tsx","components/movies/MovieItem.tsx","components/movies/MovieList.tsx","pages/AllMovies.tsx","components/movies/NewMovieForm.tsx","pages/NewMovie.tsx","pages/Favorites.tsx","components/layout/MainNavigation.tsx","components/layout/Layout.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/movies/NewMovieForm.module.css"],"names":["module","exports","FavoritesContext","createContext","favorites","totalFavorites","addFavorite","favoriteMovie","removeFavorite","movieId","itemIsFavorite","FavoritesContextProvider","props","useState","userFavorites","setUserFavorites","context","length","prevUserFavorites","concat","filter","movie","id","some","Provider","value","children","Card","className","classes","card","MovieItem","favoritesCtx","useContext","item","image","src","alt","title","content","description","actions","onClick","MovieList","list","movies","map","AllMoviesPage","isLoading","setIsLoading","loadedMovies","setLoadedMovies","useEffect","fetch","then","response","json","data","key","push","NewMovieForm","titleInputRef","useRef","imageInputRef","descriptionInputRef","form","onSubmit","event","preventDefault","movieData","current","onAddMovie","control","htmlFor","type","required","ref","data-rows","NewMoviePage","history","useHistory","method","body","JSON","stringify","headers","replace","FavoritesPage","MainNavigation","header","logo","to","badge","Layout","main","App","path","exact","AllMovies","NewMovie","Favorites","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dddab65b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MovieItem_item__aPaea\",\"image\":\"MovieItem_image__38Q-O\",\"content\":\"MovieItem_content__1W6He\",\"actions\":\"MovieItem_actions__cQx_M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"active\":\"MainNavigation_active__oN3Ka\",\"badge\":\"MainNavigation_badge__QYsXO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3_jzl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"MovieList_list__2ma3N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","import { createContext, useState } from 'react';\nimport { IMovieItem } from '../components/movies/MovieItem';\n\ninterface IFavoritesContextProviderProps {\n  children:  React.ReactNode;\n}\n\ninterface IFavoritesContext {\n  favorites: IMovieItem[];\n  totalFavorites: number;\n  addFavorite: (favoriteMovie: IMovieItem) => void;\n  removeFavorite: (movieId: string) => void;\n  itemIsFavorite: (movieId: string) => boolean;\n}\n\nconst FavoritesContext = createContext<IFavoritesContext>({\n  favorites: [],\n  totalFavorites: 0,\n  addFavorite: (favoriteMovie: IMovieItem) => {},\n  removeFavorite: (movieId: string) => {},\n  itemIsFavorite: (movieId: string) => { return false }\n});\n\nexport const FavoritesContextProvider = (props: IFavoritesContextProviderProps) => {\n  const [userFavorites, setUserFavorites] = useState<IMovieItem[]>([]);\n\n  const addFavoriteHandler = (favoriteMovie: IMovieItem) => {\n    setUserFavorites((prevUserFavorites) => {\n      return prevUserFavorites.concat(favoriteMovie);\n    });\n  }\n\n  const removeFavoriteHandler = (movieId: string) => {\n    setUserFavorites(prevUserFavorites => {\n      return prevUserFavorites.filter(movie => movie.id !== movieId);\n    });\n  }\n\n  const itemIsFavoriteHandler = (movieId: string) => {\n    return userFavorites.some(movie => movie.id === movieId);\n  }\n\n  const context = {\n    favorites: userFavorites,\n    totalFavorites: userFavorites.length,\n    addFavorite: addFavoriteHandler,\n    removeFavorite: removeFavoriteHandler,\n    itemIsFavorite: itemIsFavoriteHandler\n  };\n\n  return (\n    <FavoritesContext.Provider value={context}>\n      {props.children}\n    </FavoritesContext.Provider>\n  );\n}\n\nexport default FavoritesContext;","import classes from './Card.module.css';\n\ninterface IcardProps {\n  children: React.ReactNode;\n}\n\nconst Card = (props: IcardProps) => {\n  return <div className={classes.card}>{props.children}</div>;\n}\n\nexport default Card;","import { useContext } from 'react';\nimport FavoritesContext from '../../store/favorites-context';\nimport Card from '../ui/Card';\nimport classes from './MovieItem.module.css';\n\nexport interface IMovieItem {\n  id: string;\n  title: string;\n  description: string;\n  image: string;\n}\n\nconst MovieItem = (props: IMovieItem) => {\n  const favoritesCtx = useContext(FavoritesContext);\n\n  const itemIsFavorite = favoritesCtx.itemIsFavorite(props.id);\n\n  const toggleFavoriteStatusHandler = () => {\n    if (itemIsFavorite) {\n      favoritesCtx.removeFavorite(props.id);\n    } else {\n      favoritesCtx.addFavorite({\n        id: props.id,\n        title: props.title,\n        description: props.description,\n        image: props.image,\n      });\n    }\n  }\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <div className={classes.image}>\n          <img src={props.image} alt={props.title} />\n        </div>\n        <div className={classes.content}>\n          <h3>{props.title}</h3>\n          <p>{props.description}</p>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={toggleFavoriteStatusHandler}>\n            {itemIsFavorite ? 'Remove from Favorites' : 'To Favorites'}\n          </button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default MovieItem;\n","import MovieItem, { IMovieItem } from './MovieItem';\nimport classes from './MovieList.module.css';\n\nexport interface IMovieList{\n  movies: IMovieItem[];\n}\n\nconst MovieList = (props: IMovieList) => {\n  return (\n    <ul className={classes.list}>\n      {props.movies.map((movie) => (\n        <MovieItem\n          key={movie.id}\n          id={movie.id}\n          image={movie.image}\n          title={movie.title}\n          description={movie.description}\n        />\n      ))}\n    </ul>\n  );\n}\n\nexport default MovieList;","import { useState, useEffect } from 'react';\nimport { IMovieItem } from '../components/movies/MovieItem';\nimport MovieList from '../components/movies/MovieList';\n\nconst AllMoviesPage = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadedMovies, setLoadedMovies] = useState<IMovieItem[]>([]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(\n      'https://react-movies-app-41c26-default-rtdb.firebaseio.com/movies.json'\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        const movies = [];\n\n        for (const key in data) {\n          const movie = {\n            id: key,\n            ...data[key]\n          };\n\n          movies.push(movie);\n        }\n\n        setIsLoading(false);\n        setLoadedMovies(movies);\n      });\n  }, []);\n\n  if (isLoading) {\n    return (\n      <section>\n        <p>Loading...</p>\n      </section>\n    );\n  }\n\n  return (\n    <section>\n      <h1>All Movies</h1>\n      <MovieList movies={loadedMovies} />\n    </section>\n  );\n}\n\nexport default AllMoviesPage;","import { useRef } from 'react';\nimport Card from '../ui/Card';\nimport classes from './NewMovieForm.module.css';\n\nexport interface IMovieData {\n  title: string;\n  image: string;\n  description: string;\n}\n\nexport interface INewMovieFormProps {\n  onAddMovie: (movie: IMovieData) => void;\n}\n\nconst NewMovieForm = (props: INewMovieFormProps) => {\n  const titleInputRef = useRef<HTMLInputElement>(null);\n  const imageInputRef = useRef<HTMLInputElement>(null);\n  const descriptionInputRef = useRef<HTMLTextAreaElement>(null);\n\n  const submitHandler = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const enteredTitle = titleInputRef.current?.value;\n    const enteredImage = imageInputRef.current?.value;\n    const enteredDescription = descriptionInputRef.current?.value;\n\n    const movieData = {\n      title: enteredTitle,\n      image: enteredImage,\n      description: enteredDescription,\n    } as IMovieData;\n\n    props.onAddMovie(movieData);\n  }\n\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='title'>Movie Title</label>\n          <input type='text' required id='title' ref={titleInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='image'>Movie Image</label>\n          <input type='url' required id='image' ref={imageInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='description'>Description</label>\n          <textarea\n            id='description'\n            required\n            data-rows='5'\n            ref={descriptionInputRef}\n          ></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button>Add Movie</button>\n        </div>\n      </form>\n    </Card>\n  );\n}\n\nexport default NewMovieForm;\n","import NewMovieForm, { IMovieData } from '../components/movies/NewMovieForm';\nimport { useHistory } from 'react-router-dom';\n\nconst NewMoviePage = () => {\n  const history = useHistory();\n\n  const addMovieHandler = (movieData: IMovieData) => {\n    fetch(\n      'https://react-movies-app-41c26-default-rtdb.firebaseio.com/movies.json',\n      {\n        method: 'POST',\n        body: JSON.stringify(movieData),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n    ).then(() => {\n      history.replace('/');\n    });\n  }\n\n  return (\n    <section>\n      <h1>Add New Movie</h1>\n      <NewMovieForm onAddMovie={addMovieHandler}/>\n    </section>\n  );\n}\n\nexport default NewMoviePage;","import { useContext } from 'react';\nimport MovieList from '../components/movies/MovieList';\nimport FavoritesContext from '../store/favorites-context';\n\nconst FavoritesPage = () => {\n  const favoritesCtx = useContext(FavoritesContext);\n  let content;\n\n  if (favoritesCtx.totalFavorites === 0) {\n    content = <p>You got no favorites yet. Start adding some?</p>;\n  } else {\n    content = <MovieList movies={favoritesCtx.favorites} />;\n  }\n\n  return (\n    <section>\n      <h1>My Favorites</h1>\n      {content}\n    </section>\n  );\n}\n\nexport default FavoritesPage;","import { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport FavoritesContext from '../../store/favorites-context';\nimport classes from './MainNavigation.module.css';\n\nconst MainNavigation = () => {\n  const favoritesCtx = useContext(FavoritesContext);\n\n  return (\n    <header className={classes.header}>\n      <div className={classes.logo}>Movies App</div>\n      <nav>\n        <ul>\n          <li>\n            <Link to='/'>All Movies</Link>\n          </li>\n          <li>\n            <Link to='/new-movie'>Add New Movie</Link>\n          </li>\n          <li>\n            <Link to='/favorites'>\n              My Favorites\n              <span className={classes.badge}>\n                {favoritesCtx.totalFavorites}\n              </span>\n            </Link>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n}\n\nexport default MainNavigation;","import MainNavigation from './MainNavigation';\nimport classes from './Layout.module.css';\n\ninterface ILayoutProps {\n  children: React.ReactNode;\n}\n\nconst Layout = (props: ILayoutProps) => {\n  return (\n    <div>\n      <MainNavigation />\n      <main className={classes.main}>{props.children}</main>\n    </div>\n  );\n}\n\nexport default Layout;","import { Route, Switch } from 'react-router-dom';\nimport AllMoviesPage from './pages/AllMovies';\nimport NewMoviePage from './pages/NewMovie';\nimport FavoritesPage from './pages/Favorites';\nimport Layout from './components/layout/Layout';\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <AllMoviesPage />\n        </Route>\n        <Route path=\"/new-movie\">\n          <NewMoviePage />\n        </Route>\n        <Route path=\"/favorites\">\n          <FavoritesPage />\n        </Route>\n      </Switch>\n      <p>Disclaimer:- All the images used throughout the website are linked from unsplash.com, we do not host these images.</p>\n    </Layout>\n  );\n}\n\nexport default App;\n\n// import Todo from './components/Todo';\n\n// function App() {\n//   return (\n//     <div>\n//       <h1>My Todos</h1>\n//       <Todo text=\"Learn react\"/>\n//       <Todo text=\"Learn Angular\"/>\n//       <Todo text=\"Learn Vue\"/>\n//     </div>\n//   );\n// }\n\n// export default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { FavoritesContextProvider } from './store/favorites-context';\n\nReactDOM.render(\n  <React.StrictMode>\n    <FavoritesContextProvider>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </FavoritesContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewMovieForm_form__3Oc3F\",\"control\":\"NewMovieForm_control__BZArL\",\"actions\":\"NewMovieForm_actions__29jXI\"};"],"sourceRoot":""}